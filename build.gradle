plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'jacoco'
	id 'org.flywaydb.flyway' version '9.22.1'
}

group = 'com.sofdev'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	compileOnly("org.projectlombok:lombok")
	testImplementation("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'commons-io:commons-io:2.8.0' // Apache Commons IO

}

tasks.register('installFrontend', Exec) {
	inputs.file("frontend/yarn.lock")
	inputs.file("frontend/package.json")
	outputs.dir("frontend/node_modules")

	workingDir "frontend"
	executable "yarn"
	args "install", "--update-checksums"
}

tasks.register('buildFrontend', Exec) {
	dependsOn installFrontend
	inputs.files(file("frontend").listFiles((file -> file.name != "build") as FileFilter))
	outputs.dir("frontend/build")

	workingDir "frontend"
	executable "yarn"
	args "build"
}

tasks.register('copyFrontend', Copy) {
	from buildFrontend.outputs
	into "$buildDir/resources/main/static"
	doLast {
		println "copied frontend artifacts to $buildDir/resources/main/static"
	}
}

tasks.register('cleanFrontend', Delete) {
	delete "frontend/build", "$buildDir/resources/main/static"
	doLast {
		println "deleted frontend artifacts"
	}
}

bootRun {
	dependsOn copyFrontend
}

resolveMainClassName {
	dependsOn copyFrontend
}

jar {
	dependsOn copyFrontend
}

build {
	dependsOn copyFrontend
}

clean {
	dependsOn cleanFrontend
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

compileTestJava {
	dependsOn copyFrontend
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.getRequired().set(true)
	}
}

flyway {
	url = 'jdbc:postgresql://localhost:5433/bridge_db'
	user = 'bridge_dev'
	password = 'bridge_dev'
}
